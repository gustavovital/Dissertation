# set wd ----
setwd('C:/Users/gusta/Documents/GitHub/dissertation/codes/')
getwd()
# set wd ----
setwd('C:/Users/gusta/Documents/GitHub/dissertation/')
getwd()
# get data ----
data.lm <- read_csv('data\\var_lm_irf.csv')
# Packages ----
library(tidyverse)
library(patchwork)
# Packages ----
library(tidyverse)
library(patchwork)
# set wd ----
setwd('C:/Users/gusta/Documents/GitHub/dissertation/')
# get data ----
data.lm <- read_csv('data\\var_lm_irf.csv')
data.vader <- read_csv('data\\var_vader_irf.csv')
View(data.lm)
data <- read_csv('data\\data.csv')
View(data)
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_point()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_point() +
geom_smooth()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_point() +
geom_smooth(method = 'lm')
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE)
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, colour = 'red')
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, colour = 'red') +
theme_classic()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_point(size = 3) +
geom_smooth(method = 'lm', se = FALSE, colour = 'red') +
theme_classic()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_point(size = 3, alpha = .6) +
geom_smooth(method = 'lm', se = FALSE, colour = 'red') +
theme_classic()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_point(size = 3, alpha = .6) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray30') +
theme_classic()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_point(size = 3, alpha = .6) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray80') +
theme_classic()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_point(size = 3, alpha = .6) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70') +
theme_classic()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70') +
geom_point(size = 3, alpha = .6) +
theme_classic()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70') +
geom_point(size = 3, alpha = .6) +
labs(y = 'LM-SA-2020 Negative Words', x = y = 'VADER Negative Words')
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70') +
geom_point(size = 3, alpha = .6) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words')
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70') +
geom_point(size = 3, alpha = .6) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70') +
geom_point(size = 3, alpha = .6) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 12))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70') +
geom_point(size = 3, alpha = .6) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 12))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 3) +
geom_point(size = 3, alpha = .6) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 12))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 2) +
geom_point(size = 3, alpha = .6) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 12))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .6) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 12))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .5) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 12))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .4) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggsave("images\\correlation_vader_lm.pdf", width = 297, height = 210, units = "mm")
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .4) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 16))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .4) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 30))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .4) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words', size = 14) +
theme_classic()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .4) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words', size = 19) +
theme_classic()
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .4) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(axis.text = element_text(hjust = 0.5, size = 20))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .4) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(axis.title.x = element_text(hjust = 0.5, size = 30))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .4) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(axis.title.x = element_text(hjust = 0.5, size = 15))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .4) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(axis.title.x = element_text(hjust = 0.5, size = 15),
axis.title.y = element_text(size = 15))
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .4) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15))
ggsave("images\\correlation_vader_lm.pdf", width = 297, height = 210, units = "mm")
cor(data$vader_negative, data$lm_negative)
data %>%
ggplot(aes(vader_negative, lm_negative)) +
geom_smooth(method = 'lm', se = FALSE, colour = 'gray70', size = 1) +
geom_point(size = 3, alpha = .4) +
labs(y = 'LM-SA-2020 Negative Words', x = 'VADER Negative Words') +
theme_classic() +
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text = element_text(size = 18))
ggsave("images\\correlation_vader_lm.pdf", width = 297, height = 210, units = "mm")
cor(data$vader_negative, data$lm_negative)
View(data)
View(data.lm)
View(data)
# read dataset
data <- read_csv('data\\data_model.csv')
View(data)
# set wd ----
setwd('C:/Users/gusta/Documents/GitHub/dissertation/')
# read dataset
data <- read_csv('data\\data_model.csv')
library(urca)
ur.df(data$gdp)
summary(ur.df(data$gdp))
summary(ur.df(diff(data$gdp)))
summary(ur.df(data$gdp))[1]
teste <- summary(ur.df(data$gdp))
View(teste)
teste@teststat
teste@cval
teste@cval[1]
teste@cval[2]
teste@teststat
teste@teststat[1]
summary(ur.pp(data$gdp))
teste <- summary(ur.pp(data$gdp))
teste@teststat
teste@cval
View(teste)
teste
teste <- summary(ur.pp(diff(data$gdp)))
teste
teste <- summary(ur.pp(data$gdp))
teste
teste <- summary(ur.df(data$gdp))
teste
teste@pval
View(teste)
teste@cval
teste@teststat
View(data)
View(data)
data.test <- data[, c(2:7, 11, 13)]
View(data.test)
teste@teststat[1]
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(data.test$gdp, type = test))
cat(teste@teststat[1])
}
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(data.test$gdp, type = test))
cat(teste@teststat[1] '\n')
}
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(data.test$gdp, type = test))
cat(teste@teststat[1], '\n')
}
teste@teststat[2]
teste@teststat[3]
teste@teststat
View(teste)
teste@testreg
teste@teststat
teste@cval
teste
teste@cval
teste@cval[1]
teste@cval[2]
teste@cval[1, 1]
teste@cval[1, 2]
teste@cval[1, 3]
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(data.test$gdp, type = test))
cat('---------------------------------------------------\n')
cat('Confidence Intervals:', teste@cval[1, 1], teste@cval[1, 2], teste@cval[1, 3])
}
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(data.test$gdp, type = test))
cat('---------------------------------------------------\n')
cat('Confidence Intervals:', teste@cval[1, 1], teste@cval[1, 2], teste@cval[1, 3] '\n')
}
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(data.test$gdp, type = test))
cat('---------------------------------------------------\n')
cat('Confidence Intervals:', teste@cval[1, 1], teste@cval[1, 2], teste@cval[1, 3], '\n')
}
View(teste)
teste@cval
teste@teststat
teste@teststat[1]
teste@teststat[2]
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(data.test$gdp, type = test))
cat('---------------------------------------------------\n')
cat('Confidence Intervals: ', teste@cval[1, 1], teste@cval[1, 2], teste@cval[1, 3], '\n')
cat('P-value: ', teste@teststat[1], '\n')
}
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(data.test$gdp, type = test))
cat('---------------------------------------------------\n')
cat('TYPE OF THE TEST: ', test, '\n')
cat('\n')
cat('Confidence Intervals: ', teste@cval[1, 1], teste@cval[1, 2], teste@cval[1, 3], '\n')
cat('P-value: ', teste@teststat[1], '\n')
}
for(name in 1:length(names(data.test))){
variable <- names(data.test)[name]
coltrol <- data.test[, name]
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(control, type = test))
cat('---------------------------------------------------\n')
cat('TYPE OF THE TEST: ', test, '\n')
cat('\n')
cat('VARIABLE TO BE TESTED:', variable)
cat('Confidence Intervals: ', teste@cval[1, 1], teste@cval[1, 2], teste@cval[1, 3], '\n')
cat('P-value: ', teste@teststat[1], '\n')
}
}
for(name in 1:length(names(data.test))){
variable <- names(data.test)[name]
control <- data.test[, name]
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(control, type = test))
cat('---------------------------------------------------\n')
cat('TYPE OF THE TEST: ', test, '\n')
cat('\n')
cat('VARIABLE TO BE TESTED:', variable)
cat('Confidence Intervals: ', teste@cval[1, 1], teste@cval[1, 2], teste@cval[1, 3], '\n')
cat('P-value: ', teste@teststat[1], '\n')
}
}
View(control)
for(name in 1:length(names(data.test))){
variable <- names(data.test)[name]
control <- data.test[, name]
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(as.ts(control), type = test))
cat('---------------------------------------------------\n')
cat('TYPE OF THE TEST: ', test, '\n')
cat('\n')
cat('VARIABLE TO BE TESTED:', variable)
cat('Confidence Intervals: ', teste@cval[1, 1], teste@cval[1, 2], teste@cval[1, 3], '\n')
cat('P-value: ', teste@teststat[1], '\n')
}
}
for(name in 1:length(names(data.test))){
variable <- names(data.test)[name]
control <- data.test[, name]
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(as.ts(control), type = test))
cat('---------------------------------------------------\n')
cat('TYPE OF THE TEST: ', test, '\n')
cat('\n')
cat('VARIABLE TO BE TESTED:', variable, '\n\n')
cat('Confidence Intervals: ', teste@cval[1, 1], teste@cval[1, 2], teste@cval[1, 3], '\n')
cat('P-value: ', teste@teststat[1], '\n')
}
}
teste <- summary(ur.pp(data$gdp, type = 'Z-tau'))
teste <- summary(ur.pp(data$gdp, type = 'Z-tau', model = 'trend'))
View(teste)
teste@teststat
teste
teste@teststat
View(teste)
teste@cval
teste@cval[1]
teste@cval[1, 1]
teste@cval[1, 2]
getwd()
list.files()
# script providing Uit Root Test:
#
# Gustavo Vital
# Packages
library(tidyverse)
library(urca)
# set wd ----
setwd('C:/Users/gusta/Documents/GitHub/dissertation/')
# read dataset
data <- read_csv('data\\data_model.csv')
data.test <- data[, c(2:7, 11, 13)]
sink(file = "data\\unit_root.txt")
cat('===================================================\n')
cat('Augmented-Dickey-Fuller\n')
cat('===================================================\n')
for(name in 1:length(names(data.test))){
variable <- names(data.test)[name]
control <- data.test[, name]
for(test in c("none", "drift", "trend")){
teste <- summary(ur.df(as.ts(control), type = test))
cat('---------------------------------------------------\n')
cat('TYPE OF THE TEST: ', test, '\n')
cat('\n')
cat('VARIABLE TO BE TESTED:', variable, '\n\n')
cat('Confidence Intervals: ', teste@cval[1, 1], teste@cval[1, 2], teste@cval[1, 3], '\n')
cat('P-value: ', teste@teststat[1], '\n')
}
}
cat('===================================================\n')
cat('Phillips & Perron Unit Root Test\n')
cat('===================================================\n')
for(name in 1:length(names(data.test))){
variable <- names(data.test)[name]
control <- data.test[, name]
for(test in c("constant", "trend")){
teste <- summary(ur.pp(as.ts(control), model = test, type = 'Z-tau'))
cat('---------------------------------------------------\n')
cat('TYPE OF THE TEST: ', test, '\n')
cat('\n')
cat('VARIABLE TO BE TESTED:', variable, '\n\n')
cat('Confidence Intervals: ', teste@cval[1, 1], teste@cval[1, 2], teste@cval[1, 3], '\n')
cat('P-value: ', teste@teststat, '\n')
}
}
sink(file = NULL)
